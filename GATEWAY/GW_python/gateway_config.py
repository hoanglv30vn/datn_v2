#################################################################################### 
##                                           ``..``                               ##    
##                                         -ymNMNmds:`                            ##     
##                                 `.:/+osyMMMNmNMMMMms:                          ##     
##                             `:sdNMMMMMMMMMy.  .+hNMMMd/                        ##     
##                           :yNMMMMNdyso+++-       `+mMMMd:                      ##     
##                         /mMMMNy/.                   /NMMMo                     ##     
##                       .hMMMd+`                       .hMMMo                    ##     
##               -yyyyyyyNMMMMhyyyyyyyyyyyyyyyyyyyyyyyyyyhMMMM/                   ##     
##               :NMMMMMMMMMMddMmdNm...mMMMMMMMMMMNdmMddMNNMMMm                   ##     
##                .sdMMMMMNmdmmdmNmh   ydMMMMMMMNddNmdNNd/.yMMM:                  ##     
##                 ``yNMMMdmMmdMmh-`   `.hmMMMMmdNNdmMhs`  +MMM+                  ##     
##                   `NMMNssssss:         :sssssssssss`    /MMMo                  ##     
##                   :MMMy     .+/`         ..             oMMM+                  ##     
##                   /MMMo     :NMd/.   `.:ymd.            hMMM.                  ##     
##                   -MMMh      -yNMmhyydmMNh/            :MMMh                   ##     
##                    dMMN-       ./shddys/.            `oNMMm-                   ##     
##                    :NMMm-                         `.omMMMh.                    ##     
##                     /NMMNo.                  ``.:sdNMMNd/                      ##     
##                      -hMMMNho/-.``````..-:+oyhmMMMMNms-                        ##     
##                        :yNMMMMMN HOANGLE MMMMMMNds/-                           ##     
##                           -+shdmNNMMMMmdhyso/:.                                ##     
##                                  `MMMm                                         ##     
##                                  /MMMo                                         ##     
##           .`                     yMMM-                                         ##     
##     .----oNm`                    mMMN                                          ##     
##    -mNNNNMMMy.                  .MMMh                                          ##     
##     .../MMMMMm+`              `/yMMMo                                          ##     
##         :oydMMMm/           -smMMMMMo                                          ##     
##            `+mMMNs`       .yNMMMMMMMNy.                                        ##     
##              .hMMMh.     /mMMNh:dMMMMMm/                                       ##     
##               `sMMMd.  `yMMMm/  mMMMdMMNs`                                     ##     
##                 sMMMh`-dMMMh.   NMMN`yMMMh.                                    ##     
##                 `yMMMhmMMMo`    NMMN  +NMMd-                                   ##     
##                  `yMMMMMMy      NMMN   /NMMm-                                  ##     
##                   `hMMMMM-      dMMM`   :NMMm.                                 ##     
##                    `dMMMs       yMMM-    /MMMd`                                ##     
##                     `/+:        oMMM+     oMMMs                                ##     
##                                 -MMMh      dMMM:                               ##
#################################################################################### 
# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from logging import error
from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
import threading
import time
import datetime
import socket
import sys
import glob
import serial
from threading import Thread
from PyQt5.QtCore import QDate, Qt
import pyrebase

############################# DATABASE SQL #########################################
conn = sqlite3.connect('data_config.db')   #kết nối tới database
curr = conn.cursor()    #con trỏ
curr.execute('''CREATE TABLE IF NOT EXISTS CONFIG_GW(ATTRIBUTES char[30], THONGTIN char[20])''') 
curr.execute('''CREATE TABLE IF NOT EXISTS DATA_NODE(ID_NODE char[20], NAME_ID_NODE char[20],  ID_THIETBI CHAR[20], NAME_THIETBI CHAR[20], PHANLOAI CHAR[20])''') 
conn.commit()


# cấu hình firebase 
firebaseConfig = {
  'apiKey': "AIzaSyAEqi81NFMPBJGxWRy7QtQv961efPzL9LA",
  'authDomain': "hellodatn.firebaseapp.com",
  'databaseURL': "https://hellodatn-default-rtdb.asia-southeast1.firebasedatabase.app",
  'projectId': "hellodatn",
  'storageBucket': "hellodatn.appspot.com",
  'messagingSenderId': "559705579450",
  'appId': "1:559705579450:web:3421e5377912259256c783",
  'measurementId': "G-YK901S5FXQ"
}
firebase = pyrebase.initialize_app(firebaseConfig)
# db = firebase.database().child("ADMIN")
# firebase = pyrebase.initialize_app(firebaseConfig)
# db=firebase.database()
# data={"name":"Hoàng", 'age':22, 'addr': 'Ha Tinh'}
# db.push(data)
# db.child('infor').set(data)
# db.child('infor').set({'addr':'binh duong'})

# arr_sql = ["hoang" , "duc"]
# arr_sql += 'chao'
# print(arr_sql)




class Ui_MainWindow(object):

    def apply_span_to_sales_table(self, row, nrow):
        if nrow <= 1:
            return
        for c in (0, 1):
            self.table_danhsach.setSpan(row, c, nrow, 1)
            for r in range(row + 1, row + nrow):
                t = self.table_danhsach.takeItem(r, c)
                del t
    def ALL_DATA(self): 
        result = conn.execute("SELECT * FROM DATA_NODE")        
        self.table_danhsach.setRowCount(0)        
        last_id = -1
        start_row = 0        
        for row_number, row_data in enumerate(result): 
            self.table_danhsach.insertRow(row_number)  
            current_id, *other_values = row_data
            for colum_number, data in enumerate (row_data):
                # đoạn này là in ra bảng
                self.table_danhsach.setItem(row_number, colum_number,QtWidgets.QTableWidgetItem(str(data))) 

            # đoạn này xuống dưới + hàm apply_span_to_sales_table là:
            # so sánh gộp các hàng của cột 0, cột 1 nếu tên phòng và tên id giống nhau
            if last_id != current_id and last_id != -1:
                self.apply_span_to_sales_table(start_row, row_number - start_row)
                start_row = row_number
            last_id = current_id
            if start_row != row_number:
                # pass
                self.apply_span_to_sales_table(start_row, self.table_danhsach.rowCount())        
        # conn.close()    


    def check_data_from_sql(self,id_nha,id_gw_from_line,name_nha):
        # check xem có data chưa, nếu có rồi thì xóa.

        curr.execute("SELECT * FROM DATA_NODE")
        if (len(curr.fetchall())>0): 
            curr.execute("SELECT * FROM DATA_NODE")
            curr.execute("DELETE FROM DATA_NODE")

        curr.execute("SELECT * FROM CONFIG_GW WHERE ATTRIBUTES = ? ", [id_nha] )
        if (len(curr.fetchall())>0): 
            curr.execute("DELETE FROM CONFIG_GW WHERE ATTRIBUTES = ?",[id_nha])  
            curr.execute("INSERT INTO CONFIG_GW VALUES (?,?)",[id_nha,id_gw_from_line])  

        curr.execute("SELECT * FROM CONFIG_GW WHERE ATTRIBUTES = ? ", [name_nha] )
        if (len(curr.fetchall())>0): 
            curr.execute("DELETE FROM CONFIG_GW WHERE ATTRIBUTES = ?",[name_nha])  
    def read_idGW_firebase(self):
        db = firebase.database().child("ADMIN")        
        id_gw_from_line = self.line_idgw.text()
        name_nha = "name_nha"
        id_nha = "id_nha"
        data_gw = db.child(id_gw_from_line).get()
        data_object=data_gw.val()
        try:
            self.check_data_from_sql(id_nha,id_gw_from_line,name_nha)             
            self.pretty(data_object)
        except:
            print("error")
        print("oke")    
    def pretty( self, data_object):
        for phong, nha in data_object.items():
            # print("phòng:" + str(phong))
            if isinstance(nha, dict):
                for thietbi, tenphong in nha.items():
                    # print("tên thiết bị "+ thietbi)
                    tenphongsql = "tentam"
                    if isinstance(tenphong, dict):
                        for doituong, dulieu in tenphong.items():                            
                            if doituong == "namethietbi":
                                namethietbi = dulieu
                                # print(namethietbi)
                            elif doituong == "phanloai":
                                phanloai = dulieu
                                # print(phanloai)
                        # print (str(phong) + ":"+ str(thietbi)+ ":" + str(namethietbi)+ ":" + str(phanloai) )
                        curr.execute("INSERT INTO DATA_NODE VALUES (?,?,?,?,?)",[phong,tenphongsql,thietbi,namethietbi,phanloai])                
                    else:
                        # print("tên phòng:" + tenphong)
                        tenphongsql = tenphong
                        curr.execute("UPDATE DATA_NODE SET NAME_ID_NODE = ? WHERE ID_NODE = ?",[tenphongsql,phong])                                             
                # pass
            else:
                print("nhà" + str(nha))    
                tennhasql=str(nha)
                curr.execute("INSERT INTO CONFIG_GW VALUES (?,?)",["name_nha",tennhasql])                            
        conn.commit()
        self.lab_name_gw.setText(tennhasql)
        self.ALL_DATA()

    # def pretty( self, data_object):
    #     for key, value in data_object.items():
    #         print("key:" + str(key))
    #         if isinstance(value, dict):
    #             self.pretty(value)
    #         else:
    #             print("value" + str(value))    



# ####################################################################
# 
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(819, 540)
        MainWindow.setStyleSheet("#centralwidget{\n"
    "    background-color:qlineargradient(spread:pad, x1:1, y1:0.25, x2:0.988636, y2:1, stop:0.0909091 rgba(29, 113, 133, 248), stop:1 rgba(255, 255, 255, 255));\n"
    "font-size:16px;\n"
    "}\n"
    "\n"
    "#line_idgw,#box_comport,#box_baudrate{\n"
    "font-size:24px;\n"
    "}\n"
    "\n"
    "QLabel{\n"
    "border-radius: 10%;\n"
    "font-size:20px;\n"
    "background-color:rgb(217, 232, 217);\n"
    "}\n"
    "#tab_config,#tab_hienthi{\n"
    "background-color:rgba(0, 124, 91, 206)\n"
    "}\n"
    "\n"
    "#butt_oke{\n"
    "border-radius: 30%;\n"
    "font-size:20px;\n"
    "background-color:rgb(223, 223, 167)\n"
    "}\n"
    "#table_danhsach{\n"
    "font-size:20px;\n"
    "}\n"
    "")
# 
#
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 20, 791, 511))
        self.tabWidget.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_hienthi = QtWidgets.QWidget()
        self.tab_hienthi.setObjectName("tab_hienthi")
        self.table_danhsach = QtWidgets.QTableWidget(self.tab_hienthi)
        self.table_danhsach.setGeometry(QtCore.QRect(10, 110, 761, 281))
        self.table_danhsach.setObjectName("table_danhsach")
        self.table_danhsach.setColumnCount(5)
        self.table_danhsach.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_danhsach.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_danhsach.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_danhsach.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_danhsach.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_danhsach.setHorizontalHeaderItem(4, item)      
        self.table_danhsach.horizontalHeader().setDefaultSectionSize(150)
        self.lab_name_gw = QtWidgets.QLabel(self.tab_hienthi)
        self.lab_name_gw.setGeometry(QtCore.QRect(10, 40, 421, 41))
        self.lab_name_gw.setObjectName("lab_name_gw")
        self.tabWidget.addTab(self.tab_hienthi, "")
        self.tab_config = QtWidgets.QWidget()
        self.tab_config.setObjectName("tab_config")
        self.butt_oke = QtWidgets.QPushButton(self.tab_config)
        self.butt_oke.setGeometry(QtCore.QRect(550, 120, 91, 61))
        self.butt_oke.setObjectName("butt_oke")
        self.line_idgw = QtWidgets.QLineEdit(self.tab_config)
        self.line_idgw.setGeometry(QtCore.QRect(120, 120, 381, 61))
        self.line_idgw.setText("")
        self.line_idgw.setObjectName("line_idgw")
        self.label = QtWidgets.QLabel(self.tab_config)
        self.label.setGeometry(QtCore.QRect(120, 60, 151, 41))
        self.label.setObjectName("label")
        self.lab_comport = QtWidgets.QLabel(self.tab_config)
        self.lab_comport.setGeometry(QtCore.QRect(120, 260, 191, 41))
        self.lab_comport.setObjectName("lab_comport")
        self.lab_baudrate = QtWidgets.QLabel(self.tab_config)
        self.lab_baudrate.setGeometry(QtCore.QRect(450, 260, 191, 41))
        self.lab_baudrate.setObjectName("lab_baudrate")
        self.box_comport = QtWidgets.QComboBox(self.tab_config)
        self.box_comport.setGeometry(QtCore.QRect(120, 340, 191, 51))
        self.box_comport.setObjectName("box_comport")
        self.box_baudrate = QtWidgets.QComboBox(self.tab_config)
        self.box_baudrate.setGeometry(QtCore.QRect(450, 340, 191, 51))
        self.box_baudrate.setObjectName("box_baudrate")
        self.tabWidget.addTab(self.tab_config, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 819, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
#
# ####################################################################
        # self.check_data_from_sql()
        self.ALL_DATA()
        # nhập id gw, nhấn nút thì đọc từ firebase.
        self.butt_oke.clicked.connect(self.read_idGW_firebase)
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GATEWAY"))
        item = self.table_danhsach.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID NODE"))  
        item = self.table_danhsach.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "NAME NODE"))                  
        item = self.table_danhsach.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "ID THIẾT BỊ"))
        item = self.table_danhsach.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "NAME THIẾT BỊ"))      
        item = self.table_danhsach.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "PHÂN LOẠI"))

        self.lab_name_gw.setText(_translate("MainWindow", "    NAME GATEWAY"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_hienthi), _translate("MainWindow", "LIST"))
        self.butt_oke.setText(_translate("MainWindow", "OK"))
        self.label.setText(_translate("MainWindow", "   ID GATEWAY "))
        self.lab_comport.setText(_translate("MainWindow", "       COM PORT"))
        self.lab_baudrate.setText(_translate("MainWindow", "       BAUD RATE"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_config), _translate("MainWindow", "CONFIG"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
